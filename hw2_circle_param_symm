#include "tgaimage.h"
#include <iostream>
using namespace std;
#include <algorithm>
#include <cmath>

const TGAColor white = TGAColor(255, 255, 255, 255);
const TGAColor red = TGAColor(255, 0, 0, 255);

void circle_px(double& x, double& y, int& x2, int& y2, TGAImage& image) {
	int _x2, _y2;
	_x2 = x2 - x;//точки x1,x2 в системе координат с центром окружности в точке (0,0) 
	_y2 = y2 - y;
	image.set(x2, y2, red);
	image.set(-_x2 + x, _y2 + y, red); // распространение точки на все октанты, переход в исходную систему координат 
	image.set(_x2 + x, -_y2 + y, red);
	image.set(-_x2 + x, -_y2 + y, red);
	image.set(_y2 + x, _x2 + y, red);
	image.set(_y2 + x, -_x2 + y, red);
	image.set(-_y2 + x, _x2 + y, red);
	image.set(-_y2 + x, -_x2 + y, red);
}

void circle(double x, double y, double r, TGAImage & image) {
	int  x2, y2, _x2, _y2;
	x2 = x + r;
	y2 = y;
	for (double a = 0; a <= 45; a = a+0.5) { // c 0.5 получается симпатичнее
		x2 = round(r * cos(a)) + x;
		y2 =round(r * sin(a)) + y;
		circle_px(x, y, x2, y2, image);
		
	}
}
int main(int argc, char** argv) {
	double x, y, r;
	TGAImage image(100, 100, TGAImage::RGB);
	cout << "enter x y r" << endl;
	cin >> x >> y >> r;
	circle(x,y,r, image);
	image.flip_vertically();
	image.write_tga_file("output.tga");
	return 0;
}
